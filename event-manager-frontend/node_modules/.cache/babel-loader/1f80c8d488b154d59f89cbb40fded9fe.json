{"ast":null,"code":"var _jsxFileName = \"/home/manavdesai/Music/event-manager/src/components/MyEvents.js\";\nimport Event from \"./Event\";\nimport data from \"./events_data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyEvents = () => {\n  const myEvents = data.filter(eve => eve.registered === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [myEvents.map(eve => {\n      /*#__PURE__*/\n      _jsxDEV(Event, {\n        eve: eve,\n        onDelete: \"\",\n        onToggle: \"\"\n      }, eve.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Event, {\n      eve: eve,\n      onDelete: onDelete,\n      onToggle: onToggle\n    }, eve.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyEvents;\nexport default MyEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyEvents\");","map":{"version":3,"sources":["/home/manavdesai/Music/event-manager/src/components/MyEvents.js"],"names":["Event","data","MyEvents","myEvents","filter","eve","registered","map","id","onDelete","onToggle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAMC,QAAQ,GAAGF,IAAI,CAACG,MAAL,CAAaC,GAAD,IAASA,GAAG,CAACC,UAAJ,KAAmB,IAAxC,CAAjB;AAEA,sBACI;AAAA,eACKH,QAAQ,CAACI,GAAT,CAAcF,GAAD,IAAS;AACnB;AAAA,cAAC,KAAD;AAAoB,QAAA,GAAG,EAAEA,GAAzB;AAA8B,QAAA,QAAQ,EAAC,EAAvC;AAA0C,QAAA,QAAQ,EAAC;AAAnD,SAAYA,GAAG,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA;AACH,KAFA,CADL,eAII,QAAC,KAAD;AAAoB,MAAA,GAAG,EAAEH,GAAzB;AAA8B,MAAA,QAAQ,EAAEI,QAAxC;AAAkD,MAAA,QAAQ,EAAIC;AAA9D,OAAYL,GAAG,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAZD;;KAAMN,Q;AAcN,eAAeA,QAAf","sourcesContent":["import Event from \"./Event\";\nimport data from \"./events_data\";\n\nconst MyEvents = () => {\n\n    const myEvents = data.filter((eve) => eve.registered === true)\n\n    return (\n        <div>\n            {myEvents.map((eve) => {\n                <Event key={eve.id} eve={eve} onDelete=\"\" onToggle=\"\" />\n            })}\n            <Event key={eve.id} eve={eve} onDelete={onDelete} onToggle = {onToggle} />\n        </div>\n    )\n}\n\nexport default MyEvents\n"]},"metadata":{},"sourceType":"module"}