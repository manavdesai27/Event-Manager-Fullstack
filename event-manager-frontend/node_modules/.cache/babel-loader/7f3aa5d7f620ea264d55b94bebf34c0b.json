{"ast":null,"code":"var _jsxFileName = \"/home/manavdesai/Music/event-manager/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport Events from \"./components/Events\";\nimport { useState, useEffect } from \"react\";\nimport { Nav, Navbar, NavDropdown, NavLink } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link, Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport AddEvent from \"./components/AddEvent\";\nimport MyEvents from \"./components/MyEvents\";\nimport PastEvent from \"./components/PastEvent\";\nimport UpcomingEvent from \"./components/UpcomingEvent\";\nimport data from \"./components/events_data\";\nimport { getEvents } from \"./api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddEvent, setShowAddEvent] = useState(false);\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    getEvents().then(result => setEvents(result.data));\n  }, [events]);\n\n  const addEvent = eve => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const registered = true;\n    const newEvent = {\n      id,\n      ...eve,\n      registered\n    };\n    setEvents([...events, newEvent]);\n    console.log(newEvent);\n  };\n\n  const deleteEvent = id => {\n    setEvents(events.filter(eve => eve.id !== id));\n  };\n\n  const toggleRegistered = id => {\n    setEvents(events.map(eve => eve.id === id ? { ...eve,\n      registered: !eve.registered\n    } : eve));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        collapseOnSelect: true,\n        expand: \"lg\",\n        bg: \"dark\",\n        variant: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: \"Event Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"responsive-navbar-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"responsive-navbar-nav\",\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"mr-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: \"All Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/myevents\",\n                children: \"My events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n              title: \"Events\",\n              id: \"collasible-nav-dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/pastevents\",\n                  children: \"Past Events\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/upcomingevents\",\n                  children: \"Upcoming Events\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              title: \"All Events\",\n              onCreateButton: () => setShowAddEvent(!showAddEvent),\n              showAddEvent: showAddEvent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), showAddEvent && /*#__PURE__*/_jsxDEV(AddEvent, {\n              onAdd: addEvent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 30\n            }, this), events.length > 0 ? /*#__PURE__*/_jsxDEV(Events, {\n              className: \"events\",\n              events: events,\n              onDelete: deleteEvent,\n              onToggle: toggleRegistered\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this) : \"No Events to show. Create an event using the CREATE EVENT BUTTON\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/myevents\",\n          children: /*#__PURE__*/_jsxDEV(MyEvents, {\n            database: events\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pastevents\",\n          children: /*#__PURE__*/_jsxDEV(PastEvent, {\n            database: events\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"upcomingevents\",\n          children: /*#__PURE__*/_jsxDEV(UpcomingEvent, {\n            database: events,\n            onDelete: deleteEvent,\n            onToggle: toggleRegistered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this) // <div>\n  // </div>\n  ;\n}\n\n_s(App, \"q39pw52h/W5XtQ9OpGi++G11ljs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/manavdesai/Music/event-manager/src/App.js"],"names":["Header","Events","useState","useEffect","Nav","Navbar","NavDropdown","NavLink","Link","Route","BrowserRouter","Router","Switch","AddEvent","MyEvents","PastEvent","UpcomingEvent","data","getEvents","App","showAddEvent","setShowAddEvent","events","setEvents","then","result","addEvent","eve","id","Math","floor","random","registered","newEvent","console","log","deleteEvent","filter","toggleRegistered","map","length"],"mappings":"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","sourcesContent":["import Header from \"./components/Header\";\nimport Events from \"./components/Events\";\nimport { useState, useEffect } from \"react\";\nimport { Nav, Navbar, NavDropdown, NavLink } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link, Route,BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport AddEvent from \"./components/AddEvent\";\nimport MyEvents from \"./components/MyEvents\";\nimport PastEvent from \"./components/PastEvent\";\nimport UpcomingEvent from \"./components/UpcomingEvent\";\nimport data from \"./components/events_data\";\nimport { getEvents } from \"./api/Api\";\n\nfunction App() {\n  const [showAddEvent, setShowAddEvent] = useState(false);\n\n\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    getEvents().then(result => setEvents(result.data));\n    \n  }, [events])\n\n  const addEvent = (eve) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const registered = true;\n    const newEvent = { id, ...eve, registered };\n    setEvents([...events, newEvent]);\n    console.log(newEvent);\n  };\n\n  const deleteEvent = (id) => {\n    setEvents(events.filter((eve) => eve.id !== id));\n  };\n\n  const toggleRegistered = (id) => {\n    setEvents(\n      events.map((eve) =>\n        eve.id === id ? { ...eve, registered: !eve.registered } : eve\n      )\n    );\n  };\n\n  return (\n    <main>\n      <Router>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand>Event Manager</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link>\n                {\" \"}\n                <Link to=\"/\">All Events</Link>\n              </Nav.Link>\n              <Nav.Link>\n                {\" \"}\n                <Link to=\"/myevents\">My events</Link>\n              </Nav.Link>\n              <NavDropdown title=\"Events\" id=\"collasible-nav-dropdown\">\n                <NavDropdown.Item>\n                  {\" \"}\n                  <Link to=\"/pastevents\">Past Events</Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item>\n                  {\" \"}\n                  <Link to=\"/upcomingevents\">Upcoming Events</Link>\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      \n\n      <Switch>\n        <Route path=\"/\" exact>\n          <div className=\"container\">\n            <Header\n              title=\"All Events\"\n              onCreateButton={() => setShowAddEvent(!showAddEvent)}\n              showAddEvent={showAddEvent}\n            />\n\n            {showAddEvent && <AddEvent onAdd={addEvent} />}\n\n            {events.length > 0 ? (\n              <Events\n                className=\"events\"\n                events={events}\n                onDelete={deleteEvent}\n                onToggle={toggleRegistered}\n              />\n            ) : (\n              \"No Events to show. Create an event using the CREATE EVENT BUTTON\"\n            )}\n          </div>\n        </Route>\n\n        <Route path=\"/myevents\">\n          <MyEvents database={events} />\n        </Route>\n        <Route path=\"/pastevents\">\n          <PastEvent database={events} />\n        </Route>\n        <Route path=\"upcomingevents\">\n          <UpcomingEvent database={events} onDelete={deleteEvent}\n                onToggle={toggleRegistered} />\n        </Route>\n      </Switch>\n      </Router>\n    </main>\n\n    // <div>\n\n    // </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}